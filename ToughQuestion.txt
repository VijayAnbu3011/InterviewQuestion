Queses in Complex
function queueTime(customers, n) {
  const tills = new Array(n).fill(0);
  for (let i = 0; i < customers.length; i++) {
    const minTime = Math.min(...tills);
    const minIndex = tills.indexOf(minTime);
    tills[minIndex] += customers[i];
  }
  return Math.max(...tills);
}

console.log(queueTime([10,2,3,4,4], 4));
0r can use this method
function queueTime(customers, registers) {
  let arr = [];

  for(let i = 0; i < registers; i++)
    arr[i] = 0;
 console.log(arr)
  for(let i = 0; i < customers.length; i++) {
    arr[0] += customers[i];
    console.log(arr,"before")
    arr.sort((a, b) => a - b);
    console.log(arr,"after")
  }

  return arr[arr.length - 1];
}
-----------------*****************--------------------------------
Sum of distance

function chooseBestSum(t, k, ls) {
  let arr = [];  
    
  function rec(sum, ar, n) {
        console.log(sum,"sum",ar,"AR",n,"N")
        console.log(arr,"before")
    if (n == 0) {
      arr.push(sum);
      console.log(arr,"After")
    } else {
      for (let i = 0; i < ar.length; i++) {
        rec(sum+ar[i], ar.slice(i+1), n-1);
      }
    }
  }

  rec(0, ls, k);
    
  var sol = arr.sort( (a, b) => b - a).find( a => a <= t);
  return typeof sol === 'undefined' ? null : sol;
}

let ts = [50, 55, 56,60]
console.log(chooseBestSum(163, 3, ts))

-------***********--------------
